{"version":3,"sources":["components/UI/Input/Input.css","containers/Auth/Auth.css","containers/Auth/Auth.js","components/UI/Input/Input.js"],"names":["module","exports","Input","Label","InputElement","Invalid","Auth","state","constrols","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","formIsValid","isSignUp","inputChangedHandler","controlName","e","updatedControls","updateObject","_this","Object","C_Users_user_Documents_react_burger_builder_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","target","checkValidity","input","setState","submitHandler","preventDefault","props","onAuth","switchAuthModeHandler","prevState","this","buildingBurger","authRedirectPath","onSetAuthRedirectPath","_this2","isAuthenticated","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_16__","to","form","keys","map","oFormKey","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_9__","key","changed","C_Users_user_Documents_react_burger_builder_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","shouldValidate","invalid","loading","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_15__","errorMessage","error","message","className","classes","onSubmit","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_8__","btnType","clicked","auth","disabled","Component","connect","token","burger","building","dispatch","isAuth","setAuthRedirectPath","withErrorHandler","Axios","inputElement","inputClasses","push","react__WEBPACK_IMPORTED_MODULE_0___default","assign","join","onChange","bind","options","option","displayValue","label"],"mappings":"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","file":"static/js/4.8d5ca8bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__-base64-5-\",\"Label\":\"Input__Label__-base64-5-\",\"InputElement\":\"Input__InputElement__-base64-5-\",\"Invalid\":\"Input__Invalid__-base64-5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth__-base64-5-\",\"Input\":\"Auth__Input__-base64-5-\"};","import React, { Component } from \"react\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport { auth, setAuthRedirectPath } from \"../../store/actions\";\r\nimport classes from \"./Auth.css\";\r\nimport { connect } from \"react-redux\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Axios from \"axios\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { updateObject, checkValidity } from \"../../shared/utility\";\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    constrols: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Your E-Mail\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Password\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      }\r\n    },\r\n    formIsValid: false,\r\n    isSignUp: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!this.props.buildingBurger && this.props.authRedirectPath !== \"/\") {\r\n      this.props.onSetAuthRedirectPath();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  inputChangedHandler = (controlName, e) => {\r\n    const updatedControls = updateObject(this.state.constrols, {\r\n      [controlName]: updateObject(this.state.constrols[controlName], {\r\n        value: e.target.value,\r\n        touched: true,\r\n        valid: checkValidity(\r\n          e.target.value,\r\n          this.state.constrols[controlName].validation\r\n        )\r\n      })\r\n    });\r\n\r\n    let formIsValid = true;\r\n    for (let input in updatedControls) {\r\n      formIsValid = formIsValid && updatedControls[input].valid;\r\n    }\r\n\r\n    this.setState({ constrols: updatedControls, formIsValid: formIsValid });\r\n  };\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    this.props.onAuth(\r\n      this.state.constrols.email.value,\r\n      this.state.constrols.password.value,\r\n      this.state.isSignUp\r\n    );\r\n  };\r\n\r\n  switchAuthModeHandler = () => {\r\n    this.setState(prevState => ({ isSignUp: !prevState.isSignUp }));\r\n  };\r\n\r\n  render() {\r\n    if (this.props.isAuthenticated) {\r\n      return <Redirect to={this.props.authRedirectPath} />\r\n    }\r\n    let form = Object.keys(this.state.constrols).map(oFormKey => (\r\n      <Input\r\n        key={oFormKey}\r\n        changed={this.inputChangedHandler}\r\n        elementType={this.state.constrols[oFormKey].elementType}\r\n        elementConfig={{\r\n          ...this.state.constrols[oFormKey].elementConfig,\r\n          ...{ key: oFormKey }\r\n        }}\r\n        touched={this.state.constrols[oFormKey].touched}\r\n        shouldValidate={this.state.constrols[oFormKey].validation}\r\n        invalid={!this.state.constrols[oFormKey].valid}\r\n        value={this.state.constrols[oFormKey].value}\r\n      />\r\n    ));\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n\r\n    let errorMessage = null;\r\n    if (this.props.error) {\r\n      errorMessage = <p>{this.props.error.message}</p>;\r\n    }\r\n    return (\r\n      <div className={classes.Auth}>\r\n        {errorMessage}\r\n        <form onSubmit={this.submitHandler}>\r\n          {form}\r\n          <Button\r\n            btnType=\"Success\"\r\n            clicked={() => auth}\r\n            disabled={!this.state.formIsValid}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n        <Button btnType=\"Danger\" clicked={() => this.switchAuthModeHandler()}>\r\n          Switch to {this.state.isSignUp ? \"Sign-In\" : \"Sign-Up\"}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.auth.loading,\r\n  error: state.auth.error,\r\n  isAuthenticated: state.auth.token !== null,\r\n  buildingBurger: state.burger.building,\r\n  authRedirectPath: state.auth.authRedirectPath\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAuth: (email, password, isAuth) => dispatch(auth(email, password, isAuth)),\r\n  onSetAuthRedirectPath: () => dispatch(setAuthRedirectPath(\"/\"))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Auth, Axios));\r\n","import React from \"react\";\r\nimport classes from \"./Input.css\";\r\n\r\nconst input = props => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(classes.Invalid);\r\n  }\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          onChange={props.changed.bind(this, props.elementConfig.key)}\r\n          value={props.value}\r\n        />\r\n      );\r\n      break;\r\n    case \"textArea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          onChange={props.changed.bind(this, props.elementConfig.key)}\r\n          value={props.value}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      const options = props.elementConfig.options.map(option => (\r\n        <option key={option.value} value={option.value}>\r\n          {option.displayValue}\r\n        </option>\r\n      ));\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.changed.bind(this, props.elementConfig.key)}\r\n        >\r\n          {options}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed.bind(this, props.elementConfig.key)}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n"],"sourceRoot":""}